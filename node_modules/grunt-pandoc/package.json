{
  "name": "grunt-pandoc",
  "description": "Grunt Task Pandoc Wrapper",
  "version": "0.2.3",
  "homepage": "https://github.com/sakunyo/grunt-pandoc",
  "author": {
    "name": "sakuya sugo",
    "email": "sakuya.s@sakunyo.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/sakunyo/grunt-pandoc"
  },
  "bugs": {
    "url": "https://github.com/sakunyo/grunt-pandoc/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/sakunyo/grunt-pandoc/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-pandoc\n\nPandoc Publish Runner for Grunt.\n\nMarkdown to Other Document Format Convert.\n\n* Markdown to EPUB\n* Markdown to HTML\n\n\n## Getting Started\nThis plugin requires\n* Grunt `~0.4.1`\n* Pandoc Binary\nDownload => [http://johnmacfarlane.net/pandoc/](http://johnmacfarlane.net/pandoc/)\n\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out\nthe [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as\n well as install and use Grunt plugins. Once you're familiar with that process, you may install\n this plugin with this command:\n\n```shell\nnpm install grunt-pandoc --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-pandoc');\n```\n\n## The \"pandoc\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `pandoc` to the data object passed into `grunt.initConfig()`.\n\n\n#### Markdown to EPUB\n```js\nfunction myFilterFunc(context: string):string {\n\treturn context;\n}\n\ngrunt.initConfig({\n  pandoc: {\n    My_EPUB: { // OUTPUT file name\n      configs: {\n        \"publish\"   : 'EPUB',                 // Publish File Format.\n        \"title\"     : \"My EPUB Title\",        // EPUB Title\n        \"metadata\"  : \"include/metadata.xml\", // EPUB include META data File Path.\n        \"stylesheet\": \"include/style.css\"     // EPUB include StyleSheet File Path.\n        \"filter\"    : myFilterFunc            // Calling Before Execute Command.\n      },\n      files: {\n        \"chapters\": [\n          \"chapters/header.md\", // Require Header File.\n          \"chapters/content.md\" // Chapter Files.\n          ...\n        ]\n      }\n    }\n  }\n})\n```\n\n#### Markdown to HTML\n```js\nfunction myFilterFunc(context: string):string {\n\treturn context;\n}\n\ngrunt.initConfig({\n  pandoc: {\n    toHtml: {\n      configs: {\n        \"publish\"   : 'HTML',       // Publish File Format.\n        \"filter\"    : myFilterFunc  // Calling Before Execute Command.\n      },\n      files: {\n        \"from\": [\n          \"input/toHTML.md\",\n          \"input/toHTML.md\"\n          ...\n        ]\n      }\n    }\n  }\n})\n```\n\n## Release History\n* 2013-07-02\t0.2.3\n\t* Execute User Filter before Execute Command.\n\t* Publish Format Markdown to HTML.\n* 2013-07-01\t0.2.1\n\t* Grunt 0.3 -> 0.4.1\n\t* Publish Format Markdown to EPUB.\n\n\n",
  "readmeFilename": "README.md",
  "_id": "grunt-pandoc@0.2.3",
  "dist": {
    "shasum": "66cebc1e6189ffcfeafc3ad848ed013b3517ab97",
    "tarball": "http://registry.npmjs.org/grunt-pandoc/-/grunt-pandoc-0.2.3.tgz"
  },
  "_from": "grunt-pandoc@*",
  "_npmVersion": "1.2.14",
  "_npmUser": {
    "name": "sakunyo",
    "email": "sakuya.s@gmail.com"
  },
  "maintainers": [
    {
      "name": "sakunyo",
      "email": "sakuya.s@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "66cebc1e6189ffcfeafc3ad848ed013b3517ab97",
  "_resolved": "https://registry.npmjs.org/grunt-pandoc/-/grunt-pandoc-0.2.3.tgz"
}
